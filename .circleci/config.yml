version: 2
jobs:
  csharp_test:
    working_directory: ~/sawan
    docker:
      - image: jscdroiddev/jsc-net-dev-tools:2.2.207
    environment:
      DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX: 2
    steps:
      - checkout
      - run:
          name: restore
          command: dotnet restore
      - run:
          name: build
          command: dotnet test /p:AltCover=true /p:AltCoverAssemblyFilter="xunit|sawan.Views" /p:AltCoverFileFilter="Program.cs|Startup.cs"
      - run:
          name: codecov
          command: codecov -y ./codecov.yml -f ./sawan-tests/coverage.xml -F csharp
      - run: mkdir -p workspace
      - run: cp -R sawan-tests workspace/
      - persist_to_workspace:
          root: workspace
          paths:
            - sawan-tests
  typescript_test:
    working_directory: ~/sawan
    docker:
      - image: jscdroiddev/jsc-net-dev-tools:2.2.207
    steps:
      - checkout
      - run:
          name: install
          command: yarn --cwd ClientApp install --silent --no-progress
      - run:
          name: test
          command: yarn --cwd ClientApp --silent run test:coverage
      - run:
          name: codecov
          command: codecov -y ./codecov.yml -f ./ClientApp/coverage/coverage-final.json -F react
      - run: mkdir -p workspace
      - run: cp -R ClientApp ./workspace/
      - persist_to_workspace:
          root: workspace
          paths:
            - ClientApp
  codeanalysis:
    working_directory: ~/sawan
    docker:
      - image: jscdroiddev/jsc-net-dev-tools:2.2.207
    steps:
      - checkout
      - run: 
          name: "Environment variables"
          command: |
            echo "export PROJECTKEY='sawan.io'" >> $BASH_ENV
            echo "export VERSION='1.1.${CIRCLE_BUILD_NUM}'" >> $BASH_ENV
            echo "export ORG='jscoobyced-github'" >> $BASH_ENV
            echo "export SONARURL='https://sonarcloud.io'" >> $BASH_ENV
            echo "export CSCOVERAGE='coverage.xml'" >> $BASH_ENV
            echo "export LCOVINFO='coverage/lcov.info'" >> $BASH_ENV
            echo "export CLIENTPATH='ClientApp'" >> $BASH_ENV
            echo "export TSCOVERAGE='test-report.xml'" >> $BASH_ENV
            echo "export TSCONFIG='tsconfig.json'" >> $BASH_ENV
            echo "export EXCLUSIONS='coverage/**/*,**/*.xml,**/*.spec.t*,**/Program.cs,**/Startup.cs,**/node_modules/**/*,**/wwwroot/dist/**/*,*.cshtml'" >> $BASH_ENV
            echo "export COVEXCLUSIONS='**/*.js,**/tests/*'" >> $BASH_ENV
            echo "export BRANCH='${CIRCLE_BRANCH}'" >> $BASH_ENV
            echo "export PRNUMBER=$(echo ${CIRCLE_PULL_REQUEST} | awk -F '/' '{print $NF}')" >> $BASH_ENV
            echo "export REPONAME='${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}'" >> $BASH_ENV
      - attach_workspace:
          at: ./workspace
      - run: cp -R ./workspace/ClientApp/* ./ClientApp/
      - run: cp -R ./workspace/sawan-tests/* ./sawan-tests/
      - run:
          name: sonar
          command:  |
            ./.circleci/sonar.sh
  typescript:
    working_directory: ~/sawan
    docker:
      - image: circleci/node:11.15.0
    steps:
      - checkout
      - run:
          name: install
          command: yarn --cwd ClientApp install --silent --no-progress
      - run:
          name: build
          command: yarn --cwd ClientApp build --silent --no-progress
  release:
    working_directory: ~/sawan
    docker:
      - image: jscdroiddev/jsc-net-dev-tools:2.2.207
    steps:
      - checkout
      - run:
          name: git-release
          command: |
            ./.circleci/git-release.sh "Latest release of https://sawan.io."
workflows:
  version: 2
  do_it_all:
    jobs:
      - csharp_test
      - typescript_test
      - typescript
      - codeanalysis:
          requires:
            - csharp_test
            - typescript_test
      - release:
          requires:
            - codeanalysis
            - typescript
          filters:
            branches:
              only: master
